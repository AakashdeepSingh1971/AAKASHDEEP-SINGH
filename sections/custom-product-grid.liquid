<div class="section2">
  <h1>Tisso vison in the wild</h1>
  <div class="productGrid">
    {% assign products = collections.all.products %}

    {% for product in products limit: 6 %}
      <div class="productItem">
        {{ product | image_url: width: 433 | image_tag: width: 433 }}
        <button
          class="open-popup"
          onclick="fetchProduct({{ product.id }})"
          data-product-id="{{ product.id }}"
        >
          +
        </button>
      </div>
    {% endfor %}
  </div>

  <div class="popup" id="product-popup">
    <div class="popup-content">
      <span class="close-popup" onclick="closePopup()">X</span>
      <div class="popupMainDiv">
        <div class="firstDiv">
          <img id="popupImg" src="" alt="Product Image" class="productImage" height="120" width="140">
          <div class="popupTextDiv">
            <h2 id="popup-title"></h2>
            <p class="popup-price"></p>
            <p class="popup-description"></p>
          </div>
        </div>
        <div class="secondDiv">
          <div></div>
          <div></div>
          <div></div>
        </div>
      </div>
    </div>
  </div>
</div>
<style>
  .popup p{
    margin:0;
  }
  .popupMainDiv{
    display:flex;
    flex-direction:column;
    gap:10px;

  }
  .firstDiv{
    display:flex;
  }
  .popupTextDiv{
    display:flex;
    flex-direction:column;
    gap:10px;
  }
  .section2 {
    padding: 51px;
  }
  .productGrid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
  }
  .gridItem {
    width: 433px;
    height: 444px;

  }
  .popup {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);

  }
  .popup-content {
    background-color: #fff;
    margin: 10% auto;
    padding: 20px;

    width: 311px;√è
    height: 447px;

    gap: 0;

    background: rgba(255, 255, 255, 1);
    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2);

  }
</style>

<script>
  const productData = [
    {% for product in products %}{
    'id': "{{ product.id }}",
    'title':"{{ product.title }}",
    'price' : "{{ product.price  }}",
    'description':"{{ product.description }}",
    'variants':[
      {% for variant in product.variants %}
        {
          'id':"{{ variant.id }}",
          'option1':"{{ variant.option1 }}",
          'option2':"{{ variant.option2 }}",
          'price':"{{ variant.price }}",
        }
          {% if forloop.last==false %},{% endif %}
          {% endfor %}
        ]
      }
          {% if forloop.last==false %},{% endif %}
          {% endfor %}
      ]
          console.log(productData)


  const popup = document.getElementById("product-popup");

  function closePopup() {

    popup.style.display = "none";
  };

  let currentProduct = null;

 function fetchProduct(productId){
  console.log(productId)
    const id = productId.toString();
 console.log(id)
    const product = productData.find(item => item.id === id);

    if (product) {
      console.log(product)
      

    document.getElementById('popup-image').src = "{{ product.featured_image | img_url: '300x300' }}";
  document.getElementById('popup-title').textContent = product.title;

  document.getElementById('popup-price').textContent = `${parseFloat(product.price).toFixed(2)} $`;
  document.getElementById('popup-description').textContent = product.description || '';

  const colorOptions = document.getElementById('color-options');
  const sizeOptions = document.getElementById('size-options');
  colorOptions.innerHTML = '';
  sizeOptions.innerHTML = '';

  let colors = new Set();
  let sizes = new Set();

  product.variants.forEach(variant => {
    if (variant.option2) colors.add(variant.option2);
    if (variant.option1) sizes.add(variant.option1);
  });

  colors.forEach(color => {
    const colorBtn = document.createElement('button');
    colorBtn.classList.add('color-option');
    colorBtn.textContent = color;
    colorBtn.setAttribute('data-color', color);
    colorBtn.onclick = function() {
      document.querySelectorAll('.color-option').forEach(btn => btn.classList.remove('active'));
      colorBtn.classList.add('active');
    };
    colorOptions.appendChild(colorBtn);
  });

  sizes.forEach(size => {
    const sizeOption = document.createElement('option');
    sizeOption.value = size;
    sizeOption.textContent = size;
    sizeOptions.appendChild(sizeOption);
  });

  document.getElementById('product-popup').style.display = 'flex';
          } else {
      console.error('Product not found!');
    }
}

document.querySelector('.close-popup').addEventListener('click', () => {
  document.getElementById('product-popup').style.display = 'none';
});
</script>
