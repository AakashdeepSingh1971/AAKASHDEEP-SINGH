{{ 'custom_grid.css' | asset_url | stylesheet_tag }}

<div class="section2">
  <h1>Tisso vison in the wild</h1>
  <div class="productGrid">
    {% assign products = collections[section.settings.collection].products %}

    {% for product in products limit: 6 %}
      <div class="productItem">
        <!-- {{ product.featured_image | image_tag: crop: 'center', scale: 2 }} -->
        <img src=" {{ product.featured_image | image_url }}" height="100%" width="100%">
        <button
          class="open-popup"
          onclick="fetchProduct({{ product.id }})"
          data-product-id="{{ product.id }}"
        >
          +
        </button>
      </div>
    {% endfor %}
  </div>

  <div class="popup" id="product-popup">
    <div class="popup-content">
      <span class="close-popup" onclick="closePopup()">&#10005;</span>
      <div
        class="popupMainDiv"
        style="
          height: 90%;
          justify-content: space-between;
        "
      >
        <div class="popupMainDiv">
          <div class="firstDiv">
            <img id="popupImg" src="" alt="Product Image" class="productImage" height="140" width="120">
            <div class="popupTextDiv">
              <p id="popup-title"></p>
              <p id="popup-price"></p>
              <p id="popup-description"></p>
            </div>
          </div>
          <div class="secondDiv">
            <div class="color-selector">
              <p class="colorHeader">Color</p>
              <div class="color-button-group" id="color-button-group"></div>

              <div class="size-selector">
                <label>Size</label>
                <div id="size"></div>
              </div>
            </div>
          </div>
        </div>
        <button id="add-to-cart" class="add-to-cart-button">ADD TO CART</button>
      </div>
    </div>
  </div>
</div>
<script>

               const productData = [
                 {% for product in products %}{
                 'id': "{{ product.id }}",
                 'title':"{{ product.title }}",

                 'price' : "{{ product.price  }}",
                 'description':"{{ product.description }}",
                 'image':"{{ product.featured_image | img_url: '300x300' }}",
                 'variants':[
                   {% for variant in product.variants %}
                     {
                       'id':"{{ variant.id }}",
                       'option1':"{{ variant.option1 }}",
                       'option2':"{{ variant.option2 }}",
                       'price':"{{ variant.price }}",
                     }
                       {% if forloop.last==false %},{% endif %}
                       {% endfor %}
                     ]
                   }
                       {% if forloop.last==false %},{% endif %}
                       {% endfor %}
                   ]
                       console.log(productData)


               const popup = document.getElementById("product-popup");

               function closePopup() {

                 popup.style.display = "none";
               };

               let currentProduct = null;

              function fetchProduct(productId){
               console.log(productId)
                 const id = productId.toString();
              console.log(id)
                 const product = productData.find(item => item.id === id);

                 if (product) {
                   console.log(product)


                 document.getElementById('popupImg').src = product.image;
               document.getElementById('popup-title').textContent = product.title;

               document.getElementById('popup-price').textContent = product.price+"â‚¬"|| '';
               document.getElementById('popup-description').innerHTML = product.description || '';

               const colorOptions = document.getElementById('color-button-group');
               const sizeOptions = document.getElementById('size');
               colorOptions.innerHTML = '';
               sizeOptions.innerHTML = '';

               let colors = new Set();
               let sizes = new Set();

               product.variants.forEach(variant => {
                 if (variant.option2) colors.add(variant.option2);
                 if (variant.option1) sizes.add(variant.option1);
               });

               colors.forEach(color => {
            const colorDiv = document.createElement('div');
            colorDiv.classList.add('color-option');
            colorDiv.setAttribute('data-color', color);

            const colorCircle = document.createElement('span');
            colorCircle.classList.add('colorDiv');
            colorCircle.style.backgroundColor = color;

            const colorName = document.createElement('span');
            colorName.classList.add('colorType');
            colorName.textContent = color;

            colorDiv.appendChild(colorCircle);
            colorDiv.appendChild(colorName);

            colorDiv.onclick = function() {
              document.querySelectorAll('.color-option').forEach(btn => btn.classList.remove('selected'));
              colorDiv.classList.add('selected');
            };

            colorOptions.appendChild(colorDiv);

            const divider = document.createElement('div');
            divider.classList.add('divider');
            colorOptions.appendChild(divider);
          });
        const sizeDropdown = createSizeDropdown(Array.from(sizes));
        sizeOptions.appendChild(sizeDropdown);


               document.getElementById('product-popup').style.display = 'flex';
                       } else {
                   console.error('Product not found!');
                 }
             }
            document.addEventListener('DOMContentLoaded', function() {
                       const options = document.querySelectorAll('.color-option');

                       options.forEach(option => {
                           option.addEventListener('click', function() {
                               options.forEach(opt => opt.classList.remove('selected'));
                               this.classList.add('selected');
                           });
                       });
                   });
             document.querySelector('.close-popup').addEventListener('click', () => {
               document.getElementById('product-popup').style.display = 'none';
             });

    function createSizeDropdown(sizes) {
      const selectDiv = document.createElement('div');
      selectDiv.className = 'select';
      selectDiv.tabIndex = 1;

      const defaultOption = document.createElement('div');
      defaultOption.className = 'default-option';
      defaultOption.textContent = 'Choose your size';

       const arrowDiv = document.createElement('span');
      arrowDiv.className = 'arrowDiv';

      const arrow = document.createElement('span');
      arrow.className = 'arrow';
      arrowDiv.appendChild(arrow);
      defaultOption.appendChild(arrowDiv);
      selectDiv.appendChild(defaultOption);

      const dropdown = document.createElement('div');
      dropdown.className = 'dropdown-options';
      dropdown.style.display = 'none'; // Start hidden

      sizes.forEach((size) => {
          const optionDiv = document.createElement('div');
          optionDiv.className = 'dropdown-option';
          optionDiv.textContent = size;
          optionDiv.onclick = () => {
              defaultOption.textContent = size; // Set the selected size as the default text
              dropdown.style.display = 'none'; // Hide the dropdown after selection
              arrow.classList.remove('open'); // Reset arrow direction
          };
          dropdown.appendChild(optionDiv);
      });

      // Toggle dropdown visibility and arrow flipping on click
      defaultOption.onclick = () => {
          const isVisible = dropdown.style.display === 'block';
          dropdown.style.display = isVisible ? 'none' : 'block';
          arrow.classList.toggle('open'); // Toggle arrow direction
      };

      selectDiv.appendChild(dropdown);
      return selectDiv;
  }
</script>
{% schema %}
  {
  "name": "Product Grid Section",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Choose a Collection"
    }
  ]
}
{% endschema %}
