<div class="section2">
  <h1>Tisso vison in the wild</h1>
  <div class="productGrid">
    {% assign products = collections.all.products %}

    {% for product in products limit: 6 %}
      <div class="productItem">
        {{ product | image_url: width: 433 | image_tag: width: 433 }}
        <button
          class="open-popup"
          onclick="fetchProduct({{ product.id }})"
          data-product-id="{{ product.id }}"
        >
          +
        </button>
      </div>
    {% endfor %}
  </div>

  <div class="popup" id="product-popup">
    <div class="popup-content">
      <span class="close-popup" onclick="closePopup()">X</span>
      <div
        class="popupMainDiv"
        style="
          height: 90%;
          justify-content: space-between;
        "
      >
        <div class="popupMainDiv">
          <div class="firstDiv">
            <img id="popupImg" src="" alt="Product Image" class="productImage" height="140" width="120">
            <div class="popupTextDiv">
              <h2 id="popup-title"></h2>
              <p id="popup-price"></p>
              <p id="popup-description"></p>
            </div>
          </div>
          <div class="secondDiv">
            <div class="color-selector">
              <p class="colorHeader">Color</p>
              <div class="color-button-group" id="color-button-group"></div>

              <div class="size-selector">
                <label>Size</label>
                <div id="size"></div>
              </div>
            </div>
          </div>
        </div>
        <button id="add-to-cart" class="add-to-cart-button">ADD TO CART</button>
      </div>
    </div>
  </div>
</div>
<style>
  .select {
    display:flex;
    flex-direction: column;
    position:relative;
   border:1px solid black;
    color:#000;
  }
  .default{
    justify-content: start!important;
  }

  .option {
    padding:0 30px 0 10px;
    min-height:40px;
    display:flex;
    align-items:center;
    background:#fff;
    color:#000;
    text-align:center;
    justify-content: center;
    position:absolute;
    top:0;
    width: 100%;
    pointer-events:none;
    order:2;
    z-index:1;
    transition:background .4s ease-in-out;
    box-sizing:border-box;
    overflow:hidden;
    white-space:nowrap;

  }

  .option:hover {
    background:#000;
    color:#fff;
  }

  .select:focus .option {
    position:relative;
    pointer-events:all;
  }

  input {
    opacity:0;
    position:absolute;
    left:-99999px;
  }

  input:checked + label {
    order: 1;
    z-index:2;
    background:#fff;
    border-top:none;
    position:relative;
    color:#000;
  }

  input:checked + label:after {
    content:'';
    width: 0;
  	height: 0;
  	border-left: 5px solid transparent;
  	border-right: 5px solid transparent;
  	border-top: 5px solid #000000;
    position:absolute;
    right:15px;
    top:calc(50% - 2.5px);
    pointer-events:none;
    z-index:3;
    color:#000;
  }

  input:checked + label:before {
    position:absolute;
    right:0;
    height: 40px;
    width: 40px;
    content: '';
    background:#fff;
    color:#000;

    border: 1px solid black;
     border-top: 0;
    border-bottom: 0;
    border-right: 0;
  }
        .colorHeader{
          font-family: Jost;
      font-size: 14px;
      font-weight: 400;
      line-height: 18.2px;
      text-align: left;

        }
              .secondDiv .color-selector {
                    width: 271px;

                }
              .secondDiv  .color-button-group {
                    display: flex;

                    height: 40.44px;
                  border: 0.5px solid rgba(0, 0, 0, 1)
                }
             .secondDiv   .color-option {
                    flex: 1;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    cursor: pointer;
                    position: relative;
                    overflow: hidden;
                }
             .secondDiv   .color-option span {
                    position: relative;
                    z-index: 2;
                    transition: color 0.3s ease;
                }
             .secondDiv   .color-option::before {
                    content: '';
                    position: absolute;
                    top: 0;
                    left: 0;
                    width: 0;
                    height: 100%;
                    background-color: black;
                    transition: width 0.3s ease;

                }
             .secondDiv   .color-option.selected::before {
                    width: 100%;
                }
            .secondDiv    .color-option.selected span {
                    color: white;
                }
             .secondDiv   .divider {
                    width: 1px;
                    background-color: #ccc;
                }

        .colorDiv{
          border:2px solid black;
          height:100%;

          width: 5.81px;
          font-family: Jost;
    font-size: 18px;
    font-weight: 400;
    line-height: 18px;
    letter-spacing: -0.02em;
    text-align: left;


        border: 0.5px solid rgba(0, 0, 0, 1);
        gap: 0px;

        opacity: 0px;

        }
        .colorType{
          flex:1;
          text-align:center;
        }    .close-popup{
                  display: flex;
              justify-content: flex-end;
            }
                .popup p{
                  margin:0;
                }
              .popup-content{
                width: 311px;
            height: 447px;

              }
                .popupMainDiv{
                  display:flex;
                  flex-direction:column;
                  gap:10px;

                }
                .firstDiv{
                  gap:10px;
                  display:flex;
                }
                .popupTextDiv{
                  display:flex;
                  flex-direction:column;
                  gap:15px;
                }
                #popup-title{
                  font-family: Jost;
              font-size: 16px;
              font-weight: 300;
              line-height: 19.2px;
              text-align: left;

                }
                #popup-price{
                  font-family: Lustria;
              font-size: 16px;
              font-weight: 400;
              line-height: 19.2px;
              text-align: left;

                }
                #popup-description>p{
                  font-family: Jost;
              font-size: 14px;
              font-weight: 300;
              line-height: 15.4px;
              letter-spacing: -0.01em;
              text-align: left;

                }
                .section2 {
                  padding: 51px;
                }
                .productGrid {
                  display: grid;
                  grid-template-columns: repeat(3, 1fr);
                  gap: 20px;
                }
                .gridItem {
                  width: 433px;
                  height: 444px;

                }
                .popup {
                  display: none;
                  position: fixed;
                  top: 0;
                  left: 0;
                  width: 100%;
                  height: 100%;
                  background-color: rgba(0, 0, 0, 0.5);

                }
                .popup-content {
                  background-color: #fff;
                  margin: 10% auto;
                  padding: 20px;

                  width: 311px;√è
                  height: 447px;

                  gap: 0;

                  background: rgba(255, 255, 255, 1);
                  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2);

                }
</style>

<script>
// Constants
const POPUP_SELECTORS = {
  popup: '#product-popup',
  image: '#popupImg',
  title: '#popup-title',
  price: '#popup-price',
  description: '#popup-description',
  colorGroup: '#color-button-group',
  sizeContainer: '#size'
};

// Cached DOM elements
const domElements = {};

// Event Handlers
const eventHandlers = {
  closePopup: () => {
    domElements.popup.style.display = 'none';
  },
  
  handleColorClick: (event) => {
    if (!event.target.closest('.color-option')) return;
    
    const colorOptions = document.querySelectorAll('.color-option');
    colorOptions.forEach(option => option.classList.remove('selected'));
    event.target.closest('.color-option').classList.add('selected');
  }
};

// UI Creators
const createUI = {
  colorOption: (color) => {
    const colorDiv = document.createElement('div');
    colorDiv.classList.add('color-option');
    colorDiv.setAttribute('data-color', color);
    
    colorDiv.innerHTML = `
      <span class="colorDiv" style="background-color: ${color}"></span>
      <span class="colorType">${color}</span>
    `;
    
    return colorDiv;
  },
  
  divider: () => {
    const divider = document.createElement('div');
    divider.classList.add('divider');
    return divider;
  },
  
  sizeOption: (size, isDefault = false) => {
    const id = isDefault ? 'default-size' : size;
    return `
      <input class="selectopt" type="radio" name="size" id="${id}" ${isDefault ? 'checked' : ''}>
      <label class="option" for="${id}">${isDefault ? 'Choose your size' : size}</label>
    `;
  },
  
  sizeSelector: (sizes) => {
    const selectDiv = document.createElement('div');
    selectDiv.className = 'select';
    selectDiv.tabIndex = 1;
    
    let options = this.sizeOption(null, true); // Default option
    sizes.forEach(size => {
      options += this.sizeOption(size);
    });
    
    selectDiv.innerHTML = options;
    return selectDiv;
  }
};

// Product Handler
class ProductHandler {
  constructor(productData) {
    this.productData = productData;
    this.init();
  }
  
  init() {
    // Cache DOM elements
    Object.keys(POPUP_SELECTORS).forEach(key => {
      domElements[key] = document.querySelector(POPUP_SELECTORS[key]);
    });
    
    // Add event listeners
    document.querySelector('.close-popup').addEventListener('click', eventHandlers.closePopup);
    domElements.colorGroup.addEventListener('click', eventHandlers.handleColorClick);
  }
  
  getProduct(productId) {
    return this.productData.find(item => item.id === productId.toString());
  }
  
  updatePopup(product) {
    if (!product) {
      console.error('Product not found!');
      return;
    }
    
    // Update basic product info
    domElements.image.src = product.image;
    domElements.title.textContent = product.title;
    domElements.price.textContent = `${product.price}‚Ç¨`;
    domElements.description.innerHTML = product.description || '';
    
    // Extract unique colors and sizes
    const { colors, sizes } = this.extractOptions(product.variants);
    
    // Update color options
    this.updateColorOptions(colors);
    
    // Update size options
    this.updateSizeOptions(sizes);
    
    // Show popup
    domElements.popup.style.display = 'flex';
  }
  
  extractOptions(variants) {
    return variants.reduce((acc, variant) => {
      if (variant.option2) acc.colors.add(variant.option2);
      if (variant.option1) acc.sizes.add(variant.option1);
      return acc;
    }, { colors: new Set(), sizes: new Set() });
  }
  
  updateColorOptions(colors) {
    domElements.colorGroup.innerHTML = '';
    colors.forEach(color => {
      domElements.colorGroup.appendChild(createUI.colorOption(color));
      domElements.colorGroup.appendChild(createUI.divider());
    });
  }
  
  updateSizeOptions(sizes) {
    domElements.sizeContainer.innerHTML = '';
    domElements.sizeContainer.appendChild(createUI.sizeSelector(Array.from(sizes)));
  }
}

// Initialize
document.addEventListener('DOMContentLoaded', () => {
  const productHandler = new ProductHandler(productData);
  
  window.fetchProduct = (productId) => {
    const product = productHandler.getProduct(productId);
    productHandler.updatePopup(product);
  };
});
</script>
